buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

file "gradle.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

project.ext {
    buildNum = System.getenv("BUILD_NUMBER")
    mcVersion = "${config.minecraft.version}"
}

version = "${config.minecraft.version}-${config.moarcarts.version}-project.ext.buildNum"
group = "brassgoggledcoders"
archivesBaseName = "moarcarts"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}-${config.minecraft.version}"

    replace "@VERSION@", project.version
    replaceIn "MoarCarts.java"
}

repositories {
    mavenLocal()
    maven {
        name "K4Repo"
        url "http://maven.k-4u.nl"
    }
    maven {
        name "Chickenbones"
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "Waila"
        url "http://mobiusstrip.eu/maven"
    }
}

dependencies {
    compile "brassgoggledcoders:boilerplate:${config.minecraft.version}-${config.boilerplate.version}:deobf"
    compile "mcp.mobius.waila:Waila:${config.waila.version}_${config.minecraft.version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft.version}-${config.nei.version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft.version}-${config.codechickencore.version}:dev"
    compile "codechicken:CodeChickenLib:${config.minecraft.version}-${config.codechickenlib.version}:dev"
}

task getLibraries {
    def libsFolder = new File('libs')
    if (!libsFolder.isDirectory()) {
        libsFolder.mkdirs()
    }

    def downloads = new ArrayList<Tuple>();

    def railcraft = 'Railcraft_' + config.minecraft.version + '-' + config.railcraft.version + '-dev.jar'
    def railcraftSource = 'https://dl.dropboxusercontent.com/u/38558957/Minecraft/Railcraft/' + railcraft

    def ironchest = 'ironchest-' + config.minecraft.version + '-' + config.ironchest.version + '-deobf.jar'
    def ironchestSource = 'http://files.minecraftforge.net/maven/cpw/mods/ironchest/' + config.minecraft.version +
            '-' + config.ironchest.version + '/' + ironchest

    def immersiveengineering = 'immersive-engineering-' + config.immersiveengineering.version + '.jar'
    def immersiveengineeringSource = 'http://minecraft.curseforge.com/projects/immersive-engineering/files/2264957/download'

    def inventorytweaks = 'inventory-tweaks-' + config.invtweaks.version + '.jar'
    def inventorytweaksSource = 'http://minecraft.curseforge.com/projects/inventory-tweaks/files/2265093/download'

    downloads.add(new Tuple(railcraft, railcraftSource))
    downloads.add(new Tuple(ironchest, ironchestSource))
    downloads.add(new Tuple(immersiveengineering, immersiveengineeringSource))
    downloads.add(new Tuple(inventorytweaks, inventorytweaksSource))

    downloads.each{download ->
        def fileLocation = new File('libs', download.get(0).toString())
        if(!fileLocation.exists())  {
            fileLocation.withOutputStream { out ->
                new URL(download.get(1).toString()).withInputStream { from ->
                    out << from;
                }
            }
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'MoarCarts'
                            url 'http://BrassGoggledCoders.xyz'
                            scm {
                                url 'https://github.com/BrassGoggledCoders/MoarCarts.git\''
                                connection 'scm:git:git@github.com:BrassGoggledCoders/MoarCarts.git\''
                                developerConnection 'scm:git:git@github.com:BrassGoggledCoders/MoarCarts.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/BrassGoggledCoders/MoarCarts/issues'
                            }
                            licenses {
                                license {
                                    name 'MIT'
                                    url 'https://github.com/BrassGoggledCoders/MoarCarts/blob/master/LICENSE'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'SkySom'
                                    name 'SkySom'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
